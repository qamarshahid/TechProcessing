name: 🚀 Production Deployment Orchestrator

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      deploy_frontend:
        description: 'Deploy Frontend'
        required: true
        default: true
        type: boolean
      deploy_backend:
        description: 'Deploy Backend'
        required: true
        default: true
        type: boolean

permissions:
  contents: read
  actions: write

concurrency:
  group: production-deployment
  cancel-in-progress: false

jobs:
  detect-changes:
    name: 🔍 Detect Changes
    runs-on: ubuntu-latest
    outputs:
      frontend-changed: ${{ steps.changes.outputs.frontend }}
      backend-changed: ${{ steps.changes.outputs.backend }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Detect file changes
        id: changes
        run: |
          # Check if this is a manual trigger
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "frontend=${{ github.event.inputs.deploy_frontend || 'true' }}" >> $GITHUB_OUTPUT
            echo "backend=${{ github.event.inputs.deploy_backend || 'true' }}" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # For push events, detect changes
          if git diff --name-only HEAD~1 HEAD | grep -E "^(src/|public/|index\.html|package\.json|package-lock\.json|vite\.config\.ts|tailwind\.config\.js|postcss\.config\.js)"; then
            echo "frontend=true" >> $GITHUB_OUTPUT
            echo "Frontend changes detected"
          else
            echo "frontend=false" >> $GITHUB_OUTPUT
            echo "No frontend changes detected"
          fi
          
          if git diff --name-only HEAD~1 HEAD | grep -E "^(backend/|Dockerfile|docker-compose\.yml|\.env\.example)"; then
            echo "backend=true" >> $GITHUB_OUTPUT
            echo "Backend changes detected"
          else
            echo "backend=false" >> $GITHUB_OUTPUT
            echo "No backend changes detected"
          fi

  trigger-backend:
    name: 🏗️ Trigger Backend Deployment
    needs: detect-changes
    if: needs.detect-changes.outputs.backend-changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Trigger backend deployment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const result = await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'backend-only-deploy.yml',
              ref: context.ref
            });
            
            console.log('🏗️ Backend deployment workflow triggered');
            console.log('📋 Workflow run will be visible in the Actions tab');
            return result;

  trigger-frontend:
    name: 🎨 Trigger Frontend Deployment
    needs: detect-changes
    if: needs.detect-changes.outputs.frontend-changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Trigger frontend deployment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const result = await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'frontend-only-deploy.yml',
              ref: context.ref
            });
            
            console.log('🎨 Frontend deployment workflow triggered');
            console.log('📋 Workflow run will be visible in the Actions tab');
            return result;

  deployment-summary:
    name: 🎉 Deployment Summary
    needs: [detect-changes, trigger-backend, trigger-frontend]
    if: always() && !cancelled()
    runs-on: ubuntu-latest
    steps:
      - name: Deployment orchestration summary
        run: |
          echo "🎉 Production deployment orchestration completed!"
          echo ""
          echo "📊 Deployment Summary:"
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          
          if [ "${{ needs.detect-changes.outputs.backend-changed }}" = "true" ]; then
            if [ "${{ needs.trigger-backend.result }}" = "success" ]; then
              echo "🏗️  Backend: ✅ Deployment workflow triggered"
              echo "   📋 Check backend-only-deploy workflow for status"
            else
              echo "🏗️  Backend: ❌ Failed to trigger deployment workflow"
            fi
          else
            echo "🏗️  Backend: ⏭️ No changes detected"
          fi
          
          if [ "${{ needs.detect-changes.outputs.frontend-changed }}" = "true" ]; then
            if [ "${{ needs.trigger-frontend.result }}" = "success" ]; then
              echo "🎨 Frontend: ✅ Deployment workflow triggered"
              echo "   � Check frontend-only-deploy workflow for status"
            else
              echo "🎨 Frontend: ❌ Failed to trigger deployment workflow"
            fi
          else
            echo "� Frontend: ⏭️ No changes detected"
          fi
          
          echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
          echo "📦 Commit: ${{ github.sha }}"
          echo "🕐 Orchestrated: $(date -u +"%Y-%m-%d %H:%M:%S UTC")"
          echo ""
          echo "ℹ️  Each deployment runs in its own workflow with independent error handling"
          echo "📋 View individual deployment status in the Actions tab"
